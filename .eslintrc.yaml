root: true
env:
  node: true
  jest: true
parser: '@typescript-eslint/parser'
plugins:
  - '@typescript-eslint/eslint-plugin'
extends:
  - 'plugin:@typescript-eslint/eslint-recommended'
  - 'plugin:@typescript-eslint/recommended'
  - 'prettier'
rules:
  # Verhindert Fehler bei Vergleichen
  # https://eslint.org/docs/rules/no-constant-binary-expression
  no-constant-binary-expression: error
  # Nach einem Komma muss ein Leerzeichen kommen, davor darf keins kommen.
  # https://eslint.org/docs/rules/comma-spacing
  comma-spacing: error
  # Leerzeichen um Operatoren.
  # https://eslint.org/docs/rules/space-infix-ops
  space-infix-ops: error
  # Unbenutzte Variablen werden ausreichend durch TypeScript gepr√ºft (default ist Warnung).
  # Das muss nicht noch durch ESLint laufen, zumal dann auch die "eslint-disable-next-line @typescript-eslint/no-unused-vars"
  #   Ausnahmen alle entfallen.
  '@typescript-eslint/no-unused-vars': 'off'
  # allow @ts-ignore
  '@typescript-eslint/ban-ts-comment':
    - off
  # Parameter could be any type
  '@typescript-eslint/explicit-module-boundary-types':
    - error
    - allowArgumentsExplicitlyTypedAsAny: true
  # No semicolon
  '@typescript-eslint/semi':
    - error
    - never
  # Functions need return types
  '@typescript-eslint/explicit-function-return-type':
    - error
  # Allow "any"
  '@typescript-eslint/no-explicit-any':
    - off
  # Allow empty interface
  '@typescript-eslint/no-empty-interface':
    - off
  # Max. line length
  max-len:
    - error
    - code: 140
      ignoreUrls: true
      ignoreComments: true
      ignoreStrings: true
      ignoreTemplateLiterals: true
      ignoreRegExpLiterals: true
